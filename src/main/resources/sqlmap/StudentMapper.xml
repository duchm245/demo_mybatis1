<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="model.Student">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="BRANCH" jdbcType="VARCHAR" property="branch" />
    <result column="PERCENTAGE" jdbcType="INTEGER" property="percentage" />
    <result column="PHONE" jdbcType="INTEGER" property="phone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    ID, `NAME`, BRANCH, PERCENTAGE, PHONE, EMAIL
  </sql>
  <select id="selectByExample" parameterType="model.StudentExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from student
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from student
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.StudentExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="model.Student" useGeneratedKeys="true">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into student (`NAME`, BRANCH, PERCENTAGE, 
      PHONE, EMAIL)
    values (#{name,jdbcType=VARCHAR}, #{branch,jdbcType=VARCHAR}, #{percentage,jdbcType=INTEGER}, 
      #{phone,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="model.Student" useGeneratedKeys="true">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `NAME`,
      </if>
      <if test="branch != null">
        BRANCH,
      </if>
      <if test="percentage != null">
        PERCENTAGE,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="branch != null">
        #{branch,jdbcType=VARCHAR},
      </if>
      <if test="percentage != null">
        #{percentage,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.StudentExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update student
    <set>
      <if test="row.id != null">
        ID = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.name != null">
        `NAME` = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.branch != null">
        BRANCH = #{row.branch,jdbcType=VARCHAR},
      </if>
      <if test="row.percentage != null">
        PERCENTAGE = #{row.percentage,jdbcType=INTEGER},
      </if>
      <if test="row.phone != null">
        PHONE = #{row.phone,jdbcType=INTEGER},
      </if>
      <if test="row.email != null">
        EMAIL = #{row.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update student
    set ID = #{row.id,jdbcType=INTEGER},
      `NAME` = #{row.name,jdbcType=VARCHAR},
      BRANCH = #{row.branch,jdbcType=VARCHAR},
      PERCENTAGE = #{row.percentage,jdbcType=INTEGER},
      PHONE = #{row.phone,jdbcType=INTEGER},
      EMAIL = #{row.email,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Student">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update student
    <set>
      <if test="name != null">
        `NAME` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="branch != null">
        BRANCH = #{branch,jdbcType=VARCHAR},
      </if>
      <if test="percentage != null">
        PERCENTAGE = #{percentage,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Student">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update student
    set `NAME` = #{name,jdbcType=VARCHAR},
      BRANCH = #{branch,jdbcType=VARCHAR},
      PERCENTAGE = #{percentage,jdbcType=INTEGER},
      PHONE = #{phone,jdbcType=INTEGER},
      EMAIL = #{email,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>